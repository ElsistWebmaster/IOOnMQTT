<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plcProject caseSensitive="true" useCustomWorkspace="true" debugMode="false" extcheck="true" SFCControl="false" strictPointerCheck="false" copyWarningThreshold="200" version="2.2" useLD2="true" useFBMethods="false">
	<image>IOOnMQTT.imgx</image>
	<commSettings>ModbusTCP:255,1000,M#TCPIP:192.168.0.181/502,5000</commSettings>
	<sources>
		<main>
			<resources/>
			<tasks>
				<task name="Back">
					<program>MQTTExchange</program>
				</task>
			</tasks>
			<globalVars>
				<group name="Variables">
					<var name="Di00CPU" type="BOOL">
						<descr>Di00 CPU module</descr>
						<address type="I" typeVar="X" index="255" subIndex="0"/>
					</var>
					<var name="Di01CPU" type="BOOL">
						<descr>Di01 CPU module</descr>
						<address type="I" typeVar="X" index="255" subIndex="1"/>
					</var>
					<var name="Do00CPU" type="BOOL">
						<descr>Do00 CPU module</descr>
						<address type="Q" typeVar="X" index="255" subIndex="0"/>
					</var>
					<var name="Do01CPU" type="BOOL">
						<descr>Do01 CPU module</descr>
						<address type="Q" typeVar="X" index="255" subIndex="1"/>
					</var>
				</group>
			</globalVars>
			<retainVars>
				<group name="Variables"/>
			</retainVars>
			<constantVars>
				<group name="Variables"/>
			</constantVars>
			<functions/>
			<functionBlocks>
				<functionBlock name="MQTTClient" version="1.0.0">
					<descr>(eLLabNetworkLib_A500) Client for a MQTT server</descr>
					<vars>
						<inputVars>
							<var name="Enable" type="BOOL"/>
							<var name="SpyOn" type="BOOL">
								<descr>Spy active</descr>
							</var>
							<var name="Publish" type="BOOL">
								<descr>Publish command</descr>
							</var>
							<var name="Subscribe" type="BOOL">
								<descr>Subscribe command</descr>
							</var>
							<var name="Server" type="@USINT">
								<descr>Server URL or IP</descr>
							</var>
							<var name="Port" type="UINT">
								<descr>Server port</descr>
							</var>
							<var name="Username" type="@USINT">
								<descr>Username</descr>
							</var>
							<var name="Password" type="@USINT">
								<descr>Password</descr>
							</var>
							<var name="ClientID" type="@USINT">
								<descr>Client identifier string</descr>
							</var>
							<var name="KeepAlive" type="UINT">
								<descr>Keep Alive time (S)</descr>
							</var>
							<var name="Flags" type="DWORD">
								<descr>Protocol flags</descr>
							</var>
							<var name="QoS" type="USINT">
								<descr>Quality of service</descr>
							</var>
							<var name="Topic" type="@USINT">
								<descr>Topic name</descr>
							</var>
							<var name="Value" type="@USINT">
								<descr>Topic value</descr>
							</var>
							<var name="VLength" type="UDINT">
								<descr>Topic value length</descr>
							</var>
							<var name="TBufferRxD" type="@USINT">
								<descr>Topic buffer received</descr>
							</var>
							<var name="TBLengthRxD" type="UDINT">
								<descr>Topic buffer length received</descr>
							</var>
							<var name="VBufferRxD" type="@USINT">
								<descr>Value buffer received</descr>
							</var>
							<var name="VBLengthRxD" type="UDINT">
								<descr>Value buffer length received</descr>
							</var>
						</inputVars>
						<outputVars>
							<var name="Connected" type="BOOL">
								<descr>Connected to server</descr>
							</var>
							<var name="Fault" type="BOOL">
								<descr>Execution fault</descr>
							</var>
							<var name="Published" type="BOOL">
								<descr>Topic published (Pulse)</descr>
							</var>
							<var name="Subscribed" type="BOOL">
								<descr>Topic subscribed (Pulse)</descr>
							</var>
							<var name="TopicRxD" type="BOOL">
								<descr>Topic received (Pulse)</descr>
							</var>
							<var name="VLengthRxD" type="UINT">
								<descr>Topic value length received</descr>
							</var>
							<var name="CTime" type="REAL">
								<descr>Communication time (S)</descr>
							</var>
						</outputVars>
						<externalVars>
							<var name="SysActTaskID" type="USINT">
								<descr>Task ID</descr>
							</var>
						</externalVars>
						<localVars>
							<var name="AFPublish" type="BOOL" dim0="2">
								<descr>Auxiliary flags (Publish)</descr>
							</var>
							<var name="AFSubscribe" type="BOOL" dim0="2">
								<descr>Auxiliary flags (Subscribe)</descr>
							</var>
							<var name="BIDx" type="UINT" dim0="2">
								<descr>Buffer index [Rx][Tx]</descr>
							</var>
							<var name="BSpy" type="@BYTE">
								<descr>Buffer spy (Allocata con SysRMAlloc nel main)</descr>
							</var>
							<var name="CaseBk" type="USINT">
								<descr>Case back</descr>
							</var>
							<var name="CaseNr" type="USINT">
								<descr>Case number</descr>
							</var>
							<var name="ConnectOn" type="BOOL">
								<descr>Connection in progress</descr>
							</var>
							<var name="ErrorNr" type="UDINT">
								<descr>Error number</descr>
							</var>
							<var name="Fp" type="FILEP">
								<descr>File pointer</descr>
							</var>
							<var name="i" type="UDINT">
								<descr>Auxiliary variable</descr>
							</var>
							<var name="IPtr" type="@USINT">
								<descr>Internal pointer</descr>
							</var>
							<var name="IsConnected" type="BOOL">
								<descr>TCP client is connected</descr>
							</var>
							<var name="j" type="UDINT">
								<descr>Auxiliary variable</descr>
							</var>
							<var name="PIDIDx" type="USINT">
								<descr>Packet identifier index</descr>
							</var>
							<var name="PingOn" type="BOOL">
								<descr>Ping in progress</descr>
							</var>
							<var name="PingTBf" type="UDINT">
								<descr>Ping time buffer (uS)</descr>
							</var>
							<var name="PublishOn" type="BOOL">
								<descr>Publish in progress</descr>
							</var>
							<var name="PublishPIDRx" type="UINT" dim0="8">
								<descr>Publish packed ID (Received from broker)</descr>
							</var>
							<var name="PublishPIDTx" type="UINT">
								<descr>Publish packed ID (Sent to broker)</descr>
							</var>
							<var name="RLength" type="UDINT">
								<descr>Remaining length</descr>
							</var>
							<var name="RLSize" type="UINT">
								<descr>Remaining length size</descr>
							</var>
							<var name="RxBuffer" type="BYTE" dim0="64">
								<descr>Rx buffer</descr>
							</var>
							<var name="RxChrs" type="UINT">
								<descr>Number of Rx characters</descr>
							</var>
							<var name="SubscribeOn" type="BOOL">
								<descr>Subscribe in progress</descr>
							</var>
							<var name="SubscribePID" type="UINT">
								<descr>Subscribe packet ID</descr>
							</var>
							<var name="TCPClient" type="SysTCPClient">
								<descr>TCP client</descr>
							</var>
							<var name="TLength" type="UINT">
								<descr>Topic length</descr>
							</var>
							<var name="TxBuffer" type="BYTE" dim0="64"/>
							<var name="ConnectionTBf" type="UDINT">
								<descr>Connection time buffer (uS)</descr>
							</var>
							<var name="CTimeBf" type="UDINT" dim0="2">
								<descr>Cases time buffer (uS) [Rx][Tx]</descr>
							</var>
							<var name="SpyData" type="BYTE" dim0="8"/>
						</localVars>
					</vars>
					<iecDeclaration valid="TRUE">
						<![CDATA[]]>
					</iecDeclaration>
					<interfaces/>
					<methods/>
					<sourceCode type="ST" encoded="true">
						<![CDATA[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
mFMbwPdqm1RSqsNoBxqdb1KSCkbCNg==]]>
					</sourceCode>
				</functionBlock>
			</functionBlocks>
			<programs>
				<program name="MQTTExchange" version="1.0.0">
					<title>"MQTTExchange" example, ST language</title>
					<vars>
						<localVars>
							<var name="MQTT" type="MQTTClient">
								<descr>MQTT client FB</descr>
							</var>
							<var name="TopicRxD" type="STRING" length="64">
								<descr>Topic received buffer</descr>
							</var>
							<var name="ValueRxD" type="STRING" length="64">
								<descr>Value received buffer</descr>
							</var>
							<var name="CaseNr" type="USINT">
								<descr>Program case</descr>
							</var>
							<var name="Topic" type="STRING" length="32">
								<descr>Topic name</descr>
								<initValue>'IOCommand'</initValue>
							</var>
							<var name="DiPulse" type="BOOL">
								<descr>Digital input pulse</descr>
							</var>
						</localVars>
					</vars>
					<iecDeclaration valid="TRUE">
						<![CDATA[PROGRAM MQTTExchange

VAR
	MQTT : MQTTClient;	(* MQTT client FB *)
	TopicRxD : STRING[ 64 ];	(* Topic received buffer *)
	ValueRxD : STRING[ 64 ];	(* Value received buffer *)
	CaseNr : USINT;	(* Program case *)
	Topic : STRING[ 32 ] := 'IOCommand';	(* Topic name *)
	DiPulse : BOOL;	(* Digital input pulse *)
END_VAR

]]>
					</iecDeclaration>
					<sourceCode type="ST">
						<![CDATA[/*  ****************************************************************************
 PROGRAM "MQTTExchange"
********************************************************************************
 This program connects to a free broker, publishes the status of a logical input
 on the "IOCommand" topic. The program subscribes to the same topic so it
 receives from the broker the state at each variation, the received state
 commands a logical output. In this way, the input status is reported to the
 output by comunicating through the broker. So it realizes an example of data
 exchange between different systems by using a MQTT protocol.

 It's a part of ModbusGateway project.
 Link: https://github.com/ElsistWebmaster/ModbusGateway/archive/master.zip

 Variable declarations:

VAR
	MQTT : MQTTClient;	(* MQTT client FB *)
	TopicRxD : STRING[ 64 ];	(* Topic received buffer *)
	ValueRxD : STRING[ 64 ];	(* Value received buffer *)
	CaseNr : USINT;	(* Program case *)
	Topic : STRING[ 32 ] := 'IOCommand';	(* Topic name *)
	DiPulse : BOOL;	(* Digital input pulse *)
END_VAR

***************************************************************************** */

	(* ---------------------------------------------------------------------- *)
	(* INIZIALIZZAZIONI                                                       *)
	(* ---------------------------------------------------------------------- *)
	(* Eseguo inizializzazioni. *)

    IF (SysFirstLoop) THEN
    	MQTT.SpyOn:=TRUE; (* Spy active *)
    	MQTT.Server:=ADR('broker.mqttdashboard.com'); (* Broker URL *)
    	MQTT.Port:=1883; (* Broker TCP port *)
    	MQTT.Username:=NULL; (* Broker username *)
    	MQTT.Password:=NULL; (* Broker password *)
    	MQTT.ClientID:=ADR('Elsist'); (* Client identifier *)
    	MQTT.KeepAlive:=180; (* Keep alive time (S) *)
    	MQTT.Flags:=16#00000000; (* Connection/Publish/Subscribe flags *)
    	MQTT.QoS:=1; (* Quality of Service *)
    	MQTT.TBufferRxD:=ADR(TopicRxD); (* Topic buffer (Received) *)
    	MQTT.TBLengthRxD:=SIZEOF(TopicRxD); (* Topic buffer length (Received) *)
    	MQTT.VBufferRxD:=ADR(ValueRxD); (* Value buffer (Received) *)
    	MQTT.VBLengthRxD:=SIZEOF(ValueRxD); (* Value buffer length (Received) *)
    END_IF;

	(* ---------------------------------------------------------------------- *)
	(* MQTT CLIENT MANAGEMENT                                                 *)
	(* ---------------------------------------------------------------------- *)
	(* Gestione FB MQTTClient. *)

	MQTT(); (* MQTTClient management *)
	IF (MQTT.Fault) THEN CaseNr:=0; END_IF;
	IF NOT(MQTT.Connected) THEN CaseNr:=0; END_IF;
	Do01CPU:=MQTT.Connected; (* Connected to broker *)

	(* ---------------------------------------------------------------------- *)
	(* GESTIONE RICEZIONE TOPIC                                               *)
	(* ---------------------------------------------------------------------- *)
	(* Gestione ricezione topic da broker. *)
	
	IF (MQTT.TopicRxD) THEN

		(* Eseguo controllo se topic corretto. *)

		IF (SysStrFind(ADR(TopicRxD),ADR(Topic), FIND_DEFAULT) <> NULL) THEN

			(* Eseguo controllo se comando "Off". *)

			IF (SysStrFind(ADR(ValueRxD),ADR('Off'), FIND_DEFAULT) <> NULL) THEN
				Do00CPU:=FALSE;
			END_IF;

			(* Eseguo controllo se comando "On". *)

			IF (SysStrFind(ADR(ValueRxD),ADR('On'), FIND_DEFAULT) <> NULL) THEN
				Do00CPU:=TRUE;
			END_IF;
		END_IF;
	END_IF;

	(* ---------------------------------------------------------------------- *)
	(* GESTIONE CASES PROGRAMMA                                               *)
	(* ---------------------------------------------------------------------- *)
	(* Gestione cases programma. *)

	CASE (CaseNr) OF

			(* -------------------------------------------------------------- *)
			(* CONNECTION TO BROKER                                           *)
			(* -------------------------------------------------------------- *)
			(* Eseguo connessione al broker. *)

			0:
			MQTT.Enable:=Di01CPU; (* Connection enable *)
			IF NOT(Di01CPU) THEN RETURN; END_IF; 

			(* Se broker già connesso gestisco publish. *)

			IF (MQTT.Connected) THEN CaseNr:=10; RETURN; END_IF;
    		CaseNr:=CaseNr+1; (* Program case *)

			(* -------------------------------------------------------------- *)
			(* Eseguo attesa connessione al broker. *)

			1:
			IF NOT(MQTT.Connected) THEN RETURN; END_IF;
    		CaseNr:=10; (* Program case *)

			(* -------------------------------------------------------------- *)
			(* TOPIC SUBSCRIBE                                                *)
			(* -------------------------------------------------------------- *)
			(* Eseguo sottoscrizione al topic. *)

			10:
			MQTT.Topic:=ADR(Topic); (* Topic name *)
			MQTT.Subscribe:=TRUE; (* Topic subscribe *)
    		CaseNr:=CaseNr+1; (* Program case *)

			(* -------------------------------------------------------------- *)
			(* Eseguo attesa sottoscrizione al topic. *)

			11:
			MQTT.Subscribe:=FALSE; (* Topic subscribe *)
			IF NOT(MQTT.Subscribed) THEN RETURN; END_IF;
    		CaseNr:=20; (* Program case *)

			(* -------------------------------------------------------------- *)
			(* TOPIC PUBLISH                                                  *)
			(* -------------------------------------------------------------- *)
			(* Eseguo pubblicazione evento pulsante. La pubblicazione avviene *)
			(* sul cambiamento di stato del pulsante. *)

			20:
			IF (Di00CPU = DiPulse) THEN RETURN; END_IF;
			DiPulse:=Di00CPU; (* Digital input pulse *)

			(* Definisco nome topic da pubblicare. *)

			MQTT.Topic:=ADR(Topic); (* Topic name *)

			(* Definisco valore da pubblicare in base allo stato ingresso. *)

			IF NOT(Di00CPU) THEN MQTT.Value:=ADR('Off'); END_IF;
			IF (Di00CPU) THEN MQTT.Value:=ADR('On'); END_IF;

			(* Definisco lunghezza valore da pubblicare. *)

			MQTT.VLength:=Sysstrlen(MQTT.Value); (* Value length *)			
			MQTT.Publish:=TRUE; (* Topic publish *)
    		CaseNr:=CaseNr+1; (* Program case *)

			(* -------------------------------------------------------------- *)
			(* Eseguo attesa pubblicazione topic. *)

			21:
			MQTT.Publish:=FALSE; (* Topic publish *)
			IF NOT(MQTT.Published) THEN RETURN; END_IF;
    		CaseNr:=0; (* Program case *)
	END_CASE;

(* [End of file] *)

]]>
					</sourceCode>
				</program>
			</programs>
			<macros/>
			<structs/>
			<typedefs/>
			<enums/>
			<subranges/>
			<interfaces/>
		</main>
		<target id="Mps054_XTarget_12_0" name="IOOnMQTT.tgt" fullXml="false">
			<![CDATA[(* ************************************************************************** *)
(* Project      : SFW168J000                                                  *)
(* Programmer   : Massimo Piovera                                             *)
(* Date         : 02/10/2015                                                  *)
(* ************************************************************************** *)
(* Alias "ELSIST XTarget 12.0"                                                *)
(* -------------------------------------------------------------------------- *)

(* ************************************************************************** *)
(* VARIABLES                                                                  *)
(* ************************************************************************** *)

VAR_GLOBAL

    {G:"System variables"}
    SysVR               AT %MB0.0 : ARRAY[0..767] OF BYTE;      {DE:"System read only variables"}
    SysClock100         AT %MB0.0 : BOOL;                       {DE:"System clock 100 mS"}
    SysClock1000        AT %MB0.1 : BOOL;                       {DE:"System clock 1000 mS"}
    SysBackupEnd        AT %MB0.2 : BOOL;                       {DE:"System backup end"}
    SysRestoreFault     AT %MB0.3 : BOOL;                       {DE:"System restore fault"}
    SysPLCInRun         AT %MB0.4 : BOOL;                       {DE:"System PLC is running"}
    SysFirstLoop        AT %MB0.5 : BOOL;                       {DE:"System first execution loop"}
    SysLLabCn           AT %MB0.6 : BOOL;                       {DE:"LogicLab connected to the system"}
    SysIsDST            AT %MB0.7 : BOOL;                       {DE:"Is daylight saving time"}
    SysDTSet            AT %MB0.8 : BOOL;                       {DE:"Date/Time set"}
    SysUVSet            AT %MB0.9 : BOOL;                       {DE:"User variables set"}
    SysAlwaysOff        AT %MB0.10 : BOOL;                      {DE:"Always off"}
    SysAlwaysOn         AT %MB0.11 : BOOL;                      {DE:"Always on"}
    SysFFBUspt          AT %MB0.12 : BOOL;                      {DE:"Function or FB unsupported"}
    SysFFBPrt           AT %MB0.13 : BOOL;                      {DE:"Function or FB protected"}
    SysCfgChanged       AT %MB0.14 : BOOL;                      {DE:"System configuration changed"}

    SysActTaskID        AT %MB0.64 : USINT;                     {DE:"System active task ID"}
    SysErActTaskID      AT %MB0.65 : USINT;                     {DE:"System task ID in error"}

    SysModulesReady     AT %MB0.128 : WORD;                     {DE:"Modules connected to Sline bus (bit index)"}
    SysApllVMajor       AT %MB0.130 : UINT;                     {DE:"Application major version number"}
    SysApllVMinor       AT %MB0.132 : UINT;                     {DE:"Application minor version number"}

    SysTBackLpTm        AT %MB0.256 : UDINT;                    {DE:"System Back task loop time (uS)"}
    SysTBackLpTmMin     AT %MB0.260 : UDINT;                    {DE:"System Back task loop time min (uS)"}
    SysTBackLpTmMax     AT %MB0.264 : UDINT;                    {DE:"System Back task loop time max (uS)"}

    SysTBootExTm        AT %MB0.268 : UDINT;                    {DE:"System Boot task execution time (uS)"}
    SysTBootExTmMin     AT %MB0.272 : UDINT;                    {DE:"System Boot task execution time min (uS)"}
    SysTBootExTmMax     AT %MB0.276 : UDINT;                    {DE:"System Boot task execution time max (uS)"}

    SysTFastExTm        AT %MB0.280 : UDINT;                    {DE:"System Fast task execution time (uS)"}
    SysTFastExTmMin     AT %MB0.284 : UDINT;                    {DE:"System Fast task execution time min (uS)"}
    SysTFastExTmMax     AT %MB0.288 : UDINT;                    {DE:"System Fast task execution time max (uS)"}

    SysTSlowExTm        AT %MB0.292 : UDINT;                    {DE:"System Slow task execution time (uS)"}
    SysTSlowExTmMin     AT %MB0.296 : UDINT;                    {DE:"System Slow task execution time min (uS)"}
    SysTSlowExTmMax     AT %MB0.300 : UDINT;                    {DE:"System Slow task execution time max (uS)"}

    SysTBackExTm        AT %MB0.304 : UDINT;                    {DE:"System Back task execution time (uS)"}
    SysTBackExTmMin     AT %MB0.308 : UDINT;                    {DE:"System Back task execution time min (uS)"}
    SysTBackExTmMax     AT %MB0.312 : UDINT;                    {DE:"System Back task execution time max (uS)"}

    SysStartTime        AT %MB0.316 : UDINT;                    {DE:"PLC run since Date/Time [Epoch time]"}
    SysTime             AT %MB0.320 : UDINT;                    {DE:"System time [mS]"}
    SysTFastLpTm        AT %MB0.324 : UDINT;                    {DE:"System Fast task loop time (uS)"}
    SysTSlowLpTm        AT %MB0.328 : UDINT;                    {DE:"System Slow task loop time (uS)"}

    SysApplID           AT %MB0.332 : UDINT;                    {DE:"Application ID"}
    SysMfcCode          AT %MB0.336 : UDINT;                    {DE:"Manufacturer code"}
    SysCustomerCode     AT %MB0.340 : UDINT;                    {DE:"Customer code"}
    SysErCode           AT %MB0.344 : UDINT;                    {DE:"System error code"}
    SysErTime           AT %MB0.348 : UDINT;                    {DE:"System error time"}
    SysSerialNr         AT %MB0.352 : UDINT;                    {DE:"Device serial number"}
    SysApllBTime        AT %MB0.356 : UDINT;                    {DE:"Build time (Epoch)"}
    SysUniqueID         AT %MB0.360 : UDINT;                    {DE:"Unique ID"}
    
    SysPLCUpTime        AT %MB0.364 : UDINT;                    {DE:"PLC up time (S)"}

    SysCode             AT %MB0.512 : STRING[10];               {DE:"Device product code"}
    SysFVersion         AT %MB0.523 : STRING[10];               {DE:"Firmware version"}
    SysErInfos          AT %MB0.534 : STRING[32];               {DE:"System error infos"}
    SysApllName         AT %MB0.567 : STRING[10];               {DE:"Application name"}
    SysUSetA            AT %MB0.578 : STRING[16];               {DE:"User setting (A)"}
    SysUSetB            AT %MB0.595 : STRING[16];               {DE:"User setting (B)"}
    SysUSetC            AT %MB0.612 : STRING[16];               {DE:"User setting (C)"}
    SysUSetD            AT %MB0.629 : STRING[16];               {DE:"User setting (D)"}

    {G:"System variables"}

    SysVRW              AT %MB1.0 : ARRAY[0..639] OF BYTE;      {DE:"System read and write variables"}
    SysTimeInit         AT %MB1.0 : BOOL;                       {DE:"System timing calculation init"}

    SysDateTime         AT %MB1.256 : UDINT;                    {DE:"System current local date time [Epoch time]"}
    SysLastError        AT %MB1.260 : UDINT;                    {DE:"Last error value"}
    SysUTCDateTime      AT %MB1.264 : UDINT;                    {DE:"System current UTC date time [Epoch time]"}

    SysUInfoA           AT %MB1.512 : STRING[16];               {DE:"User info (A)"}
    SysUInfoB           AT %MB1.529 : STRING[16];               {DE:"User info (B)"}
    SysUInfoC           AT %MB1.546 : STRING[16];               {DE:"User info (C)"}
    SysUInfoD           AT %MB1.563 : STRING[16];               {DE:"User info (D)"}

    {G:"User data"}
    SysData             AT %MB100.0 : ARRAY[0..4095] OF BYTE;   {IO:"User data and backup"}
    SysDataBk           AT %MB100.2048 : ARRAY[0..2047] OF BYTE;{IO:"User data backup"}

    {G:"Digital inputs"}
    SysDI00             AT %IX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 00"}
    SysDI01             AT %IX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 01"}
    SysDI02             AT %IX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 02"}
    SysDI03             AT %IX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 03"}
    SysDI04             AT %IX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 04"}
    SysDI05             AT %IX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 05"}
    SysDI06             AT %IX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 06"}
    SysDI07             AT %IX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 07"}
    SysDI08             AT %IX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 08"}
    SysDI09             AT %IX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 09"}
    SysDI10             AT %IX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 10"}
    SysDI11             AT %IX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 11"}
    SysDI12             AT %IX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 12"}
    SysDI13             AT %IX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 13"}
    SysDI14             AT %IX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 14"}
    SysDI15             AT %IX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 15"}

    SysCPUDI            AT %IX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic inputs CPU"}

    {G:"Digital outputs"}
    SysDO00             AT %QX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 00"}
    SysDO01             AT %QX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 01"}
    SysDO02             AT %QX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 02"}
    SysDO03             AT %QX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 03"}
    SysDO04             AT %QX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 04"}
    SysDO05             AT %QX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 05"}
    SysDO06             AT %QX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 06"}
    SysDO07             AT %QX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 07"}
    SysDO08             AT %QX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 08"}
    SysDO09             AT %QX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 09"}
    SysDO10             AT %QX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 10"}
    SysDO11             AT %QX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 11"}
    SysDO12             AT %QX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 12"}
    SysDO13             AT %QX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 13"}
    SysDO14             AT %QX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 14"}
    SysDO15             AT %QX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 15"}

    SysCPUDO            AT %QX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic outputs CPU"}
END_VAR

(* ########################################################################## *)
(* SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Task ID definition                                                         *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Task ID definition"}

    ID_TASK_BOOT : USINT := 0;  {DE:"Boot task ID"}
    ID_TASK_BACK : USINT := 1;  {DE:"Back task ID"}
    ID_TASK_SLOW : USINT := 2;  {DE:"Slow task ID"}
    ID_TASK_FAST : USINT := 3;  {DE:"Fast task ID"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMAlloc" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMAlloc : @USINT

    {DE:"Allocate a memory buffer"}

    VAR_INPUT
        Size : UDINT;           {DE:"Memory size"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMAlloc" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMAlloc : BOOL

    {DE:"Allocate a relocatable memory buffer"}

    VAR_INPUT
        Size    : UDINT;           {DE:"Memory size"}
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMFree" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMFree : BOOL

    {DE:"Disallocate a relocatable memory buffer"}

    VAR_INPUT
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRandom" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRandom : REAL

    {DE:"Get random number"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSysTime" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSysTime : UDINT

    {DE:"Get uSec system time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetTaskLpTime" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetTaskLpTime : BOOL

    {DE:"Set the task loop time"}

    VAR_INPUT
        TaskID : USINT;         {DE:"Task ID"}
        Time   : UDINT;         {DE:"Task time [uSec]"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetLastError : BOOL

    { HIDDEN:ON }
    {DE:"Set the last error"}

    VAR_INPUT
        Error    : UDINT;       {DE:"Error number"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetLastError : UDINT

    {DE:"Get the last error"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetEndianness" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetEndianness : BOOL

    {DE:"Get the endianness"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* TERMIO DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* TermIO definition                                                          *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"TermIO definition"}

    NULL : FILEP := 0;  {DE:"NULL pointer"}
    EOF : INT := -1;    {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* FILEP definition                                                           *)
(* -------------------------------------------------------------------------- *)

TYPE FILEP : UDINT; END_TYPE

(* -------------------------------------------------------------------------- *)
(* "Sysfopen" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfopen : FILEP

    {DE:"Open a file"}

    VAR_INPUT
        FName : STRING[20];     {DE:"File name"}
        Mode  : STRING[4];      {DE:"Attribute"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfclose" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfclose : INT

    {DE:"Close a file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIsOpen" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIsOpen : BOOL

    {DE:"Get the file open status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfgetc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfgetc : INT

    {DE:"Get character from file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfputc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfputc : INT

    {DE:"Put character to file"}

    VAR_INPUT
        Ch   : INT;             {DE:"Character"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfread" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfread : INT

    {DE:"Read data from file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer filled with read data"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfwrite" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfwrite : INT

    {DE:"Write data to file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer of data to write"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIChars" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetIChars" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOSpace" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetOSpace" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIBfClear : BOOL

    {DE:"Clear input buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfClear : BOOL

    {DE:"Clear output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfFlush" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfFlush : BOOL

    {DE:"Flush output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIBfSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRxBSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOBfSize : UDINT

    {DE:"Get output buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetTxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetTxBSize : UDINT

    {DE:"Get Tx buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* FILE SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                           *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* File system definition                                                     *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"FSeek origin definition"}

    ID_SEEK_SET: USINT := 0;  {DE:"Beginning of file"}
    ID_SEEK_CUR: USINT := 1;  {DE:"Current position of the file pointer"}
    ID_SEEK_END: USINT := 2;  {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "Sysrename" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysrename : BOOL

    {DE:"Rename a file"}

    VAR_INPUT
        OldName : STRING[32];   {DE:"File to rename"}
        NewName : STRING[32];   {DE:"New name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysremove" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysremove : BOOL

    {DE:"Remove a file"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File to rename"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfilelength" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfilelength : DINT

    {DE:"Returns the file length"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfseek" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfseek : DINT

    {DE:"Set the file pointer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Offset : DINT;          {DE:"Offset"}
        Origin : INT;           {DE:"Origin"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysDirListing" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDirListing

    {DE:"Directory listing"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Init    : BOOL;         {DE:"Init command"}
        Next    : BOOL;         {DE:"Next command"}
        PathName: STRING[32];   {DE:"Directory name"}
    END_VAR

    VAR_OUTPUT
        Found   : BOOL;         {DE:"File found"}
        Fault   : BOOL;         {DE:"Fault"}
        IsDir   : BOOL;         {DE:"Is directory"}
        Size    : UDINT;        {DE:"File size"}
        Time    : UDINT;        {DE:"File time (UTC)"}
        FileName: STRING[16];   {DE:"File name"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SERIAL DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* SYSSERIALMODE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSSERIALMODE : STRUCT      {DE:"Serial mode"}
        Baudrate : UDINT;       {DE:"Baudrate"}
        Parity : STRING[1];     {DE:"Parity type"}
        DataBits : USINT;       {DE:"Nr of data bits"}
        StopBits : USINT;       {DE:"Nr of stop bits"}
        DTRManagement : USINT;  {DE:"DTR management type"}
        DTRComplement : BOOL;   {DE:"Complement the DTR signal"}
        EchoFlush : BOOL;       {DE:"Flush the echo"}
        DTROnTime : UINT;       {DE:"DTR On wait time"}
        DTROffTime : UINT;      {DE:"DTR Off wait time"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* Serial DTR mode definition                                                 *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Serial mode definition"}

    DTR_OFF : USINT := 0;   {DE:"DTR off"}
    DTR_ON : USINT := 1;    {DE:"DTR on"}
    DTR_AUTO_WO_TIMES : USINT := 2; {DE:"DTR Auto without times"}
    DTR_AUTO_W_TIMES : USINT := 3;  {DE:"DTR Auto with times"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialMode : BOOL

    {DE:"Get serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialMode : BOOL

    {DE:"Set serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialCTS" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialCTS : BOOL

    {DE:"Get serial CTS signal status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialDTR" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialDTR : BOOL

    {DE:"Set serial DTR signal status"}

    VAR_INPUT
        Status : BOOL;          {DE:"DTR status"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSerialPort" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSerialPort

    {DE:"Serial port manager"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Open    : BOOL;         {DE:"Open serial port"}
        COM     : @USINT;       {DE:"COM port"}
        Baudrate: UDINT;        {DE:"Baudrate"}
        Parity  : STRING[1];    {DE:"Parity type"}
        DataBits: USINT;        {DE:"Number of data bits"}
        StopBits: USINT;        {DE:"Number of stop bits"}
        DTRManagement: USINT;   {DE:"DTR management type"}
        DTRComplement: BOOL;    {DE:"DTR signal complement"}
        EchoFlush   : BOOL;     {DE:"Flush the echo characters"}
        DTROnTime   : UINT;     {DE:"DTR on time"}
        DTROffTime  : UINT;     {DE:"DTR off time"}
        FlushTm : UINT;         {DE:"Flush time [mS]"}
        RxSize  : UINT;         {DE:"Rx buffer data size"}
        TxSize  : UINT;         {DE:"Tx buffer data size"}
    END_VAR

    VAR_OUTPUT
        Opened  : BOOL;         {DE:"Serial port was opened"}
        Fault   : BOOL;         {DE:"Fault status"}
        File    : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SCANF AND PRINTF DATA TYPES DEFINITIONS AND FUNCTIONS                      *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Variable types definition"}

    BOOL_TYPE : USINT := 10;    {DE:"Boolean (1 bits)"}

    BYTE_TYPE : USINT := 20;    {DE:"Byte (8 bits)"}
    SINT_TYPE : USINT := 21;    {DE:"Single integer signed (8 bits)"}
    USINT_TYPE : USINT := 22;   {DE:"Single integer unsigned (8 bits)"}

    WORD_TYPE : USINT := 30;    {DE:"Word (16 bits)"}
    INT_TYPE : USINT := 31;     {DE:"Integer signed (16 bits)"}
    UINT_TYPE : USINT := 32;    {DE:"Integer unsigned (16 bits)"}

    DWORD_TYPE : USINT := 40;   {DE:"Double word (32 bits)"}
    DINT_TYPE : USINT := 41;    {DE:"Double integer signed (32 bits)"}
    UDINT_TYPE : USINT := 42;   {DE:"Double integer unsigned (32 bits)"}
    REAL_TYPE : USINT := 43;    {DE:"Floating (32 bits)"}

    STRING_TYPE : USINT := 50;  {DE:"String"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysVarsscanf" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsscanf : BOOL

    {DE:"Extracts values from string"}

    VAR_INPUT
        String : @USINT;        {DE:"String to scan"}
        Format : STRING[80];    {DE:"Scan format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarfprintf" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarfprintf : INT

    {DE:"Variable print to file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarsnprintf" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsnprintf : INT

    {DE:"Variable print to string"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysLWVarsnprintf" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysLWVarsnprintf : INT

    {DE:"Variable print to string with append"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* CODE FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                         *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysPCodeAccept" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPCodeAccept : BOOL

    {DE:"Accept a protection code"}

    VAR_INPUT
        Code : STRING[20];      {DE:"Code"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIDEnabled" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIDEnabled : REAL

    { HIDDEN:ON }
    {DE:"Protected ID enabled"}

    VAR_INPUT
        ID : UINT;              {DE:"ID to check"}
        DTime : UDINT;          {DE:"Demo time"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* I2C BUS TYPES DEFINITIONS AND FUNCTIONS                                    *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysI2CWrRd" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysI2CWrRd : BOOL

    {DE:"Write and read on I2C bus"}

    VAR_INPUT
        Address : USINT;        {DE:"I2c address"}
        WrBytes : USINT;        {DE:"Bytes to write"}
        WrBuffer: @USINT;       {DE:"Write data buffer"}
        RdBytes : USINT;        {DE:"Bytes to read"}
        RdBuffer: @USINT;       {DE:"Read data buffer"}
     END_VAR

    { CODE:EMBEDDED }

END_FUNCTION

(* ########################################################################## *)
(* CAN DATA TYPES DEFINITIONS AND FUNCTIONS                                   *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* CAN bit rate definition                                                    *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"CAN bit rate definition"}

    CAN_50KBIT : USINT := 0;    {DE:"Bit rate 50 Khz"}
    CAN_100KBIT : USINT := 1;   {DE:"Bit rate 100 Khz"}
    CAN_125KBIT : USINT := 2;   {DE:"Bit rate 125 Khz"}
    CAN_250KBIT : USINT := 3;   {DE:"Bit rate 250 Khz"}
    CAN_500KBIT : USINT := 4;   {DE:"Bit rate 500 Khz"}
    CAN_1MBIT : USINT := 5;     {DE:"Bit rate 1 Mhz"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* SYSCANMESSAGE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSCANMESSAGE : STRUCT      {DE:"CAN message"}
        RmReq : BOOL;           {DE:"FALSE:Data frame, TRUE:Remote request"}
        Length : USINT;         {DE:"Data length"}
        MsgID : UDINT;          {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Data : ARRAY[0..7] OF USINT;    {DE:"Message data"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* "SysCANSetMode" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANSetMode : BOOL

    {DE:"Sets the CAN controller mode"}

    VAR_INPUT
        BitRate : USINT;        {DE:"Bit rate"}
        Filter : UDINT;         {DE:"Acceptance filter"}
        Mask : UDINT;           {DE:"Acceptance mask"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIsCANRxTxAv" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIsCANRxTxAv : BOOL

    {DE:"Check if CAN Rx/Tx is available"}

    VAR_INPUT
        Select : BOOL;         {DE:"eFALSE:Rx message selection, eTRUE:Tx space selection"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANRxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANRxMsg : BOOL

    {DE:"Receive a CAN message"}

    VAR_INPUT
        Mask : UDINT;           {DE:"Message ID mask"}
        ID : UDINT;             {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANTxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANTxMsg : BOOL

    {DE:"Send a CAN message"}

    VAR_INPUT
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* IEC EMBEDDED SUPPORT FUNCTION BLOCKS                                       *)
(* ########################################################################## *)

(* ************************************************************************** *)
(* DATE AND TIME FUNCTION BLOCKS                                              *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysETimeToDate" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysETimeToDate

    {DE:"Epoch time to date conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        WeekDay: USINT;         {DE:"WeekDay"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDateToETime" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDateToETime

    {DE:"Date to epoch time conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetUTCDateTime : UDINT

    {DE:"Get the system UTC date time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetUTCDateTime : BOOL

    {DE:"Set the system UTC date time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysTimeZoneAdj" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysTimeZoneAdj : UDINT

    {DE:"Adjust the UTC date time with time zone and daylight saving time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to adjust"}
        TimeZone    : SINT;              {DE:"Difference to Greenwich time (GMT) (H)"}
        DaylightZone: USINT;             {DE:"Daylight saving zone (0=None; 1=Europe; 2=USA"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* UTILITIES                                                                  *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "Sysmemset" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemset : @USINT

    {DE:"Fill a memory area with a character value"}

    VAR_INPUT
        Buff    : @USINT;       {DE:"Memory area"}
        Ch      : INT;          {DE:"Character to set"}
        Size    : UDINT;        {DE:"Number of bytes to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysmemmove" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemmove : @USINT

    {DE:"Copy bytes between two memory areas"}

    VAR_INPUT
        Dest    : @USINT;       {DE:"Destination area"}
        Src     : @USINT;       {DE:"Source area"}
        Size    : UDINT;        {DE:"Number of bytes to copy"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"Find mode"}

    FIND_DEFAULT        : USINT := 16#00;  {DE:"Default find"}
    FIND_FROM_END       : USINT := 16#01;  {DE:"Find from end"}
    FIND_NO_CASE        : USINT := 16#02;  {DE:"Find case insentive"}
    FIND_GET_END        : USINT := 16#04;  {DE:"Return a pointer to end of found"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMemFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMemFind : @USINT

    {DE:"Locate a memory area inside another"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"Memory area where to find"}
        HSize   : UDINT;        {DE:"Haystack area size"}
        Needle  : @USINT;       {DE:"Memory area to find"}
        NSize   : UDINT;        {DE:"Needle area size"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systolower" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systolower : INT

    {DE:"Convert a character to lower case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systoupper" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systoupper : INT

    {DE:"Convert a character to upper case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysstrlen" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysstrlen : UDINT

    {DE:"Calculate length of string"}

    VAR_INPUT
        Str     : @USINT;       {DE:"String"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysStrFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysStrFind : @USINT

    {DE:"Locate a substring inside a string"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"String where to find"}
        Needle  : @USINT;       {DE:"String to find"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"OS variable ID"}

    OSID_CFG_WRITE          : UDINT := 1;   {DE:"Save configuration"}
    
    OSID_ETH0_IP            : UDINT := 100; {DE:"Eth0 IP address"}
    OSID_ETH0_MASK          : UDINT := 101; {DE:"Eth0 network mask"}
    OSID_ETH0_GATEWAY       : UDINT := 102; {DE:"Eth0 gateway"}
    OSID_ETH0_MAC           : UDINT := 103; {DE:"Eth0 MAC address"}
    OSID_ETH0_DNS_PRIM      : UDINT := 104; {DE:"Eth0 primary DNS"}
    OSID_ETH0_DNS_SEC       : UDINT := 105; {DE:"Eth0 secondary DNS"}
    
    OSID_ETH1_IP            : UDINT := 200; {DE:"Eth1 IP address"}
    OSID_ETH1_MASK          : UDINT := 201; {DE:"Eth1 network mask"}
    OSID_ETH1_GATEWAY       : UDINT := 202; {DE:"Eth1 gateway"}
    OSID_ETH1_MAC           : UDINT := 203; {DE:"Eth1 MAC address"}
    OSID_ETH1_LEASED_MAC    : UDINT := 204; {DE:"Eth1 leased MAC address"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysOSIDValue" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysOSIDValue : BOOL

    {DE:"Get or set an operative system variable"}

    VAR_INPUT
        Wr      : BOOL;         {DE:"Write command"}
        OSID    : UDINT;        {DE:"Variable ID"}
        Val     : @USINT;       {DE:"Variable pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetCrc" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCrc

    {DE:"Crc calculation"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Buf   : @USINT;         {DE:"Buffer filled with read data"}
        ByteNr: UINT;           {DE:"Number of byte to calculate"}
        CrcIni: UINT;           {DE:"Crc init value"}
    END_VAR

    VAR_OUTPUT
        Crc : UINT;             {DE:"Calculated Crc"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ************************************************************************** *)
(* CHECK CALCULATION                                                          *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* Check mode definition                                                      *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Check type definitions"}

    CRC_16_MODBUS   : USINT := 1;   {DE:"Modbus RTU CRC"}
    LRC_ISO1155     : USINT := 2;   {DE:"ISO1155 LRC"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetCheck" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetCheck : UDINT

    {DE:"Check calculation"}

    VAR_INPUT
        Buf     : @USINT;       {DE:"Buffer filled with data"}
        ByteNr  : UDINT;        {DE:"Number of bytes to calculate"}
        Init    : UDINT;        {DE:"Init value"}
        Type    : USINT;        {DE:"Check type"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* PERIPHERAL MANAGEMENT FUNCTION BLOCKS                                      *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysPhrInfos" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrInfos : BOOL

    {DE:"Read peripheral module infos"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        InfoID: USINT;          {DE:"Info ID"}
        Info : STRING[10];      {DE:"Info report"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVRd" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVRd : BOOL

    {DE:"Read variable from peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        RdAdd: UINT;            {DE:"Read address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVWr" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVWr : BOOL

    {DE:"Write variable to peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        WrAdd: UINT;            {DE:"Write address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetPhrDI" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital input mode"}

    DI_8_LL : USINT := 1;       {DE:"Read 0-7 input mode"}
    DI_8_L  : USINT := 2;       {DE:"Read 8-15 input mode"}
    DI_8_M  : USINT := 3;       {DE:"Read 16-23 input mode"}
    DI_8_MM : USINT := 4;       {DE:"Read 24-31 input mode"}

    DI_16_L : USINT := 5;       {DE:"Read 0-15 input mode"}
    DI_16_M : USINT := 6;       {DE:"Read 16-31 input mode"}

    DI_32   : USINT := 7;       {DE:"Read 32 input mode"}
    
    DI_I_8_LL : USINT := 11;    {DE:"Read 0-7 immediate input mode"}
    DI_I_8_L  : USINT := 12;    {DE:"Read 8-15 immediate input mode"}
    DI_I_8_M  : USINT := 13;    {DE:"Read 16-23 immediate input mode"}
    DI_I_8_MM : USINT := 14;    {DE:"Read 24-31 immediate input mode"}

    DI_I_16_L : USINT := 15;    {DE:"Read 0-15 immediate input mode"}
    DI_I_16_M : USINT := 16;    {DE:"Read 16-31 immediate input mode"}

    DI_I_32   : USINT := 17;    {DE:"Read 32 immediate input mode"}

END_VAR

FUNCTION_BLOCK SysGetPhrDI

    {DE:"Get the peripheral digital inputs"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : DWORD;        {DE:"Digital input value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPhrDO" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital output mode"}

    DO_8_LL : USINT := 1;       {DE:"Write 0-7 output mode"}
    DO_8_L  : USINT := 2;       {DE:"Write 8-15 output mode"}
    DO_8_M  : USINT := 3;       {DE:"Write 16-23 output mode"}
    DO_8_MM : USINT := 4;       {DE:"Write 24-31 output mode"}

    DO_16_L : USINT := 5;       {DE:"Write 0-15 output mode"}
    DO_16_M : USINT := 6;       {DE:"Write 16-31 output mode"}

    DO_32   : USINT := 7;       {DE:"Write 32 output mode"}
END_VAR

FUNCTION_BLOCK SysSetPhrDO

    {DE:"Set the peripheral digital outputs"}

    VAR
        Ver     : USINT := 1;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : DWORD;        {DE:"Digital output value"}
        Mask    : DWORD;        {DE:"Memory mapped output mask"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetAnInp" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Analog to digital mode"}

    AD_IDLE              : USINT := 16#00;  {DE:"Idle mode"}
    AD_VOLT_0_125_COMMON : USINT := 16#01;  {DE:"0-1.25V common mode"}
    AD_VOLT_0_10_COMMON  : USINT := 16#02;  {DE:"0-10V common mode"}
    AD_CURR_0_20_COMMON  : USINT := 16#03;  {DE:"0-20mA common mode"}
    AD_CURR_4_20_COMMON  : USINT := 16#04;  {DE:"4-20mA common mode"}
    AD_VOLT_0_1_COMMON   : USINT := 16#05;  {DE:"0-1V common mode"}
    AD_CURR_0_20_DIFFER  : USINT := 16#06;  {DE:"0-20mA differential mode"}
    AD_VOLT_0_1_DIFFER   : USINT := 16#07;  {DE:"0-1V differential mode"}
    AD_VOLT_0_125_DIFFER : USINT := 16#08;  {DE:"0-1.25V differential mode"}
    AD_VOLT_0_10_DIFFER  : USINT := 16#09;  {DE:"0-10V differential mode"}
    AD_PT100_DIFFER      : USINT := 16#0A;  {DE:"Pt100 differential mode"}
    AD_PT1000_DIFFER     : USINT := 16#0B;  {DE:"Pt1000 differential mode"}
    AD_NI1000_DIFFER     : USINT := 16#0C;  {DE:"Ni1000 differential mode"}
    AD_CURR_4_20_DIFFER  : USINT := 16#0D;  {DE:"4-20mA differential mode"}
    AD_PT100_DIN_43760   : USINT := 16#20;  {DE:"Pt100 DIN_43760 standard"}
    AD_PT100_AMERICAN    : USINT := 16#21;  {DE:"Pt100 American standard"}
    AD_PT100_ITS_90      : USINT := 16#22;  {DE:"Pt100 ITS-90 standard"}
    AD_PT100_IEC_60751   : USINT := 16#23;  {DE:"Pt100 IEC-60751 standard"}
    AD_PT1000_DIN_43760  : USINT := 16#28;  {DE:"Pt1000 DIN_43760 standard"}
    AD_PT1000_AMERICAN   : USINT := 16#29;  {DE:"Pt1000 American standard"}
    AD_PT1000_ITS_90     : USINT := 16#2A;  {DE:"Pt1000 ITS-90 standard"}
    AD_PT1000_IEC_60751  : USINT := 16#2B;  {DE:"Pt1000 IEC-60751 standard"}
    AD_NI1000_DIN_43760  : USINT := 16#30;  {DE:"Ni1000 DIN_43760 standard"}
    AD_THERMOCOUPLE_B    : USINT := 16#40;  {DE:"Thermocouple B type"}
    AD_THERMOCOUPLE_E    : USINT := 16#41;  {DE:"Thermocouple E type"}
    AD_THERMOCOUPLE_J    : USINT := 16#42;  {DE:"Thermocouple J type"}
    AD_THERMOCOUPLE_K    : USINT := 16#43;  {DE:"Thermocouple K type"}
    AD_THERMOCOUPLE_N    : USINT := 16#44;  {DE:"Thermocouple N type"}
    AD_THERMOCOUPLE_R    : USINT := 16#45;  {DE:"Thermocouple R type"}
    AD_THERMOCOUPLE_S    : USINT := 16#46;  {DE:"Thermocouple S type"}
    AD_THERMOCOUPLE_T    : USINT := 16#47;  {DE:"Thermocouple T type"}
    AD_VIN_VREF_G_1      : USINT := 16#5A;  {DE:"Vin/Vref gain=1"}
    AD_VIN_VREF_G_2      : USINT := 16#5B;  {DE:"Vin/Vref gain=2"}
    AD_VIN_VREF_G_4      : USINT := 16#5C;  {DE:"Vin/Vref gain=4"}
    AD_VIN_VREF_G_8      : USINT := 16#5D;  {DE:"Vin/Vref gain=8"}
    AD_VIN_VREF_G_16     : USINT := 16#5E;  {DE:"Vin/Vref gain=16"}
    AD_VIN_VREF_G_32     : USINT := 16#5F;  {DE:"Vin/Vref gain=32"}
    AD_VIN_VREF_G_64     : USINT := 16#60;  {DE:"Vin/Vref gain=64"}
    AD_VIN_VREF_G_128    : USINT := 16#61;  {DE:"Vin/Vref gain=128"}
    AD_RESISTOR_300_OHM  : USINT := 16#6E;  {DE:"Resistor 0-300 ohm"}
    AD_RESISTOR_5000_OHM : USINT := 16#6F;  {DE:"Resistor 0-5000 ohm"}
    
END_VAR

FUNCTION_BLOCK SysGetAnInp

    {DE:"Get analog input"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : REAL;         {DE:"Value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetAnOut" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital to analog mode"}

    DA_VOLT_0_10         : USINT := 16#01;  {DE:"0-10V"}
    DA_VOLT_0_5          : USINT := 16#02;  {DE:"0-5V"}
    DA_VOLT_M10_10       : USINT := 16#03;  {DE:"+-10V"}
    DA_VOLT_M5_5         : USINT := 16#04;  {DE:"+-5V"}
    DA_CURR_0_20         : USINT := 16#05;  {DE:"0-20mA"}
    DA_CURR_4_20         : USINT := 16#06;  {DE:"4-20mA"}

END_VAR

FUNCTION_BLOCK SysSetAnOut

    {DE:"Set analog output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : REAL;         {DE:"Value"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetCounter" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCounter

    {DE:"Get counter value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode : UDINT;           {DE:"Mode"}
        RCount  : BOOL;         {DE:"Reverse count"}
        Reset  : BOOL;          {DE:"Count reset"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value  : UDINT;         {DE:"Counter value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetEncoder" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetEncoder

    {DE:"Get encoder value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        RCount  : BOOL;         {DE:"Reverse count"}
        ZeroEn  : BOOL;         {DE:"Zero enable"}
        GateEn  : BOOL;         {DE:"Gate enable"}
        RGate   : BOOL;         {DE:"Reverse gate"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ZeroD   : BOOL;         {DE:"Zero pulse detected"}
        GateD   : BOOL;         {DE:"Gate detected"}
        GQuote  : UINT;         {DE:"Gate quote"}
        EQuote  : UINT;         {DE:"Encoder quote"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDMXMng" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDMXMng

    {DE:"DMX protocol management"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Start  : BOOL;          {DE:"Start"}
        File : FILEP;           {DE:"File"}
        Status : USINT;         {DE:"Status byte"}
        Devices : UINT;         {DE:"Number of devices"}
        Delay : UINT;           {DE:"Interframe delay [mSec]"}
        DataPtr : @USINT;       {DE:"Data array pointer"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPWMOut" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSetPWMOut

    {DE:"Set PWM generator output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Frequency : REAL;       {DE:"Frequency (Hz)"}
        Duty    : REAL;         {DE:"Duty cycle (%)"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* NETWORK DATA TYPES DEFINITIONS AND FUNCTIONS                               *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktSend" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysUDPSktSend : INT

    {DE:"Send data to UDP socket"}

    VAR_INPUT
        File    : FILEP;        {DE:"File pointer"}
        TxData  : @USINT;       {DE:"Tx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort    : UINT;     {DE:"Peer port"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIPReach" function block                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysIPReach

    {DE:"Checks if IP is reachable"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Refresh : USINT;        {DE:"Refresh percentage (%)"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSktListen" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSktListen

    {DE:"Set socket in listening"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File"}
        MyIP    : STRING[15];   {DE:"My IP address"}
        MyPort  : UINT;         {DE:"My port"}
        LifeTm  : UINT;         {DE:"Life time (S)"}
        FlushTm : UINT;         {DE:"Flush time (mS)"}
        RxSize  : UINT;         {DE:"Rx data size"}
        TxSize  : UINT;         {DE:"Tx data size"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Connect : BOOL;         {DE:"Socket connect"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktRcv" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPSktRcv

    {DE:"Receive data from UDP socket"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File pointer"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort: UINT;         {DE:"Peer port"}
        RxData  : @USINT;       {DE:"Rx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
        RxSize  : UINT;         {DE:"Received bytes"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPClient

    {DE:"UDP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPServer

    {DE:"UDP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPClient

    {DE:"TCP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPServer

    {DE:"TCP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetIpInfos" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetIpInfos

    {DE:"Get IP infos"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        File     : FILEP;        {DE:"Pointer to file"}
     END_VAR

    VAR_OUTPUT
        PeerIP   : STRING[15];   {DE:"Peer IP address"}
        PeerPort : UINT;         {DE:"Peer port"}
        Status   : DWORD;        {DE:"Connection status"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SPY DATA FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                     *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Spy mode definition"}

    SPY_ASCII : USINT := 1;     {DE:"Ascii mode"}
    SPY_ASCHEX: USINT := 10;    {DE:"Ascii with substitute unprintable chars"}
    SPY_BINARY: USINT := 100;   {DE:"Binary mode (From 100 to 180)"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysSpyData" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSpyData : BOOL

    {DE:"Spy data"}

    VAR_INPUT
        Mode    : USINT;        {DE:"Spy mode"}
        TFlags  : UDINT;        {DE:"Trigger flags"}
        Label   : @USINT;       {DE:"Label pointer"}
        DPtr    : @USINT;       {DE:"Data pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

]]>
		</target>
		<targetXML name="IOOnMQTT.tgtx" fullXml="true">
			<target>
				<resources>
					<resource name="ELS20" processor="ARMv7M">
						<task id="0" name="Fast" type="cyclic" period="1000" descr="Fast task">
							<constraints minPeriod="100" maxPeriod="10000"/>
						</task>
						<task id="1" name="Slow" type="cyclic" period="10000" descr="Slow task">
							<constraints minPeriod="1000" maxPeriod="100000"/>
						</task>
						<task id="2" name="Boot" type="single" period="0" descr="Boot task"/>
						<task id="3" name="Back" period="0" type="cyclic" descr="Background task"/>
					</resource>
				</resources>
			</target>
		</targetXML>
		<libraries/>
		<aux>
			<src fullXml="false" name="HMIsManager.PLC" order="0" hidden="false">
				<![CDATA[]]>
			</src>
		</aux>
		<workspace>
			<root name="IOOnMQTT" nextID="39">
				<folder name="POUs" id="1">
					<Pou name="MQTTExchange" id="10"/>
				</folder>
				<GlobalVars name="Variables" id="9"/>
				<folder name="FBs" id="38">
					<Pou name="MQTTClient" id="17"/>
				</folder>
			</root>
		</workspace>
	</sources>
	<codegen crossReference="false" crossReferenceOptions="0x3000001D" listing="true" hideSourceCodeInListing="true" saveEXPFile="true" saveTargetFiles="false" warningEnable="true" symMap="true" checkIndexType="false" waitExtension="false" allocateUnusedVariables="false" checkArrayBounds="false" checkDivisionByZero="false" checkPointers="false" checkReferences="false" checkInterfaces="false" customTargetBINFileName="IOOnMQTT.bin" customTargetTSCFileName="IOOnMQTT_source.bin" customTargetTDSFileName="IOOnMQTT_debug.bin" generateCustomFilesName="false">
		<disabledWarnings/>
		<applicationDataBlocks/>
	</codegen>
	<simWorkspaces/>
	<debug watchRefresh="20" watchVarRefresh="0" watchMaxArray="20" autoSaveWatchList="false"/>
	<editor useOldGridSize="false"/>
	<userDef>
		<release>Xtarget</release>
		<author/>
		<note/>
		<version/>
		<password disabled="true"/>
	</userDef>
	<downloadSequence sourceCode="never" debugSymbols="onPLCApplicationDownload"/>
	<commands>
		<postbuild/>
		<postdown/>
		<predown/>
	</commands>
	<resources>
		<configuration template="LogicLab.pct" version="1">
			<data protocol="root">
				<project_config nextID="0">
					<datacomment/>
				</project_config>
				<Mps054_XTarget_12_0 template="Elsist\Plc\Mps054_XTarget_12_0.pct" version="1" name="SlimLine Mps054 XTarget" caption="SlimLine Mps054 XTarget">
					<config>
						<elsist_hmis/>
					</config>
				</Mps054_XTarget_12_0>
			</data>
		</configuration>
	</resources>
</plcProject>